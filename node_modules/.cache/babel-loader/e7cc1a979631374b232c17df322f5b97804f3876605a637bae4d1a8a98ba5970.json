{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\chemistry_app\\\\chem_site\\\\src\\\\components\\\\topbar\\\\Topbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as Icons from \"react-icons/fa\";\nimport \"./Topbar.css\";\nimport { navItems } from \"../../components/NavItems\";\nimport Dropdown from \"../../components/dropdown/Dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Topbar() {\n  _s();\n  const [dropdown, setDropdown] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"navbar-logo\",\n        children: [\"NATURE\", /*#__PURE__*/_jsxDEV(Icons.FaTree, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav-items\",\n        children: navItems.map(item => {\n          if (item.title === \"People\") {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: item.cName,\n              onMouseEnter: () => setDropdown(true),\n              onMouseLeave: () => setDropdown(false),\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: item.path,\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this), dropdown && /*#__PURE__*/_jsxDEV(Dropdown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 32\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: item.cName,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: item.path,\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Topbar, \"OxaoTJsszBDmSGYGKqcYc04UCMM=\");\n_c = Topbar;\nexport default Topbar;\nvar _c;\n$RefreshReg$(_c, \"Topbar\");","map":{"version":3,"names":["React","useState","Link","Icons","navItems","Dropdown","Topbar","dropdown","setDropdown","map","item","title","cName","path","id"],"sources":["C:/Users/Dell/Desktop/chemistry_app/chem_site/src/components/topbar/Topbar.jsx"],"sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Icons from \"react-icons/fa\";\r\nimport \"./Topbar.css\";\r\nimport { navItems } from \"../../components/NavItems\";\r\nimport Dropdown from \"../../components/dropdown/Dropdown\";\r\n\r\nfunction Topbar() {\r\n  const [dropdown, setDropdown] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar\">\r\n        <Link to=\"/\" className=\"navbar-logo\">\r\n          NATURE\r\n          <Icons.FaTree />\r\n        </Link>\r\n        <ul className=\"nav-items\">\r\n          {navItems.map((item) => {\r\n            if (item.title === \"People\") {\r\n              return (\r\n                <li\r\n                  key={item.id}\r\n                  className={item.cName}\r\n                  onMouseEnter={() => setDropdown(true)}\r\n                  onMouseLeave={() => setDropdown(false)}\r\n                >\r\n                  <Link to={item.path}>{item.title}</Link>\r\n                  {dropdown && <Dropdown />}\r\n                </li>\r\n           \r\n              );\r\n            \r\n            }\r\n\r\n            \r\n            return (\r\n              <li key={item.id} className={item.cName}>\r\n                <Link to={item.path}>{item.title}</Link>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Topbar;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,KAAKC,KAAK,MAAM,gBAAgB;AACvC,OAAO,cAAc;AACrB,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,OAAOC,QAAQ,MAAM,oCAAoC;AAAC;AAAA;AAE1D,SAASC,MAAM,GAAG;EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE/C,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACrB,QAAC,IAAI;QAAC,EAAE,EAAC,GAAG;QAAC,SAAS,EAAC,aAAa;QAAA,kCAElC,QAAC,KAAK,CAAC,MAAM;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACX,eACP;QAAI,SAAS,EAAC,WAAW;QAAA,UACtBG,QAAQ,CAACK,GAAG,CAAEC,IAAI,IAAK;UACtB,IAAIA,IAAI,CAACC,KAAK,KAAK,QAAQ,EAAE;YAC3B,oBACE;cAEE,SAAS,EAAED,IAAI,CAACE,KAAM;cACtB,YAAY,EAAE,MAAMJ,WAAW,CAAC,IAAI,CAAE;cACtC,YAAY,EAAE,MAAMA,WAAW,CAAC,KAAK,CAAE;cAAA,wBAEvC,QAAC,IAAI;gBAAC,EAAE,EAAEE,IAAI,CAACG,IAAK;gBAAA,UAAEH,IAAI,CAACC;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAQ,EACvCJ,QAAQ,iBAAI,QAAC,QAAQ;gBAAA;gBAAA;gBAAA;cAAA,QAAG;YAAA,GANpBG,IAAI,CAACI,EAAE;cAAA;cAAA;cAAA;YAAA,QAOT;UAIT;UAGA,oBACE;YAAkB,SAAS,EAAEJ,IAAI,CAACE,KAAM;YAAA,uBACtC,QAAC,IAAI;cAAC,EAAE,EAAEF,IAAI,CAACG,IAAK;cAAA,UAAEH,IAAI,CAACC;YAAK;cAAA;cAAA;cAAA;YAAA;UAAQ,GADjCD,IAAI,CAACI,EAAE;YAAA;YAAA;YAAA;UAAA,QAEX;QAET,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA;EACD,iBACL;AAEP;AAAC,GAvCQR,MAAM;AAAA,KAANA,MAAM;AAyCf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}